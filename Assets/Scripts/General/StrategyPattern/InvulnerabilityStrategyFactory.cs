
using UnityEditor.Experimental.GraphView;
/// <summary>
/// 无敌策略工厂类
/// </summary>
public class InvulnerabilityStrategyFactory 
{

    /// <summary>
    /// 获取受伤策略
    /// </summary>
    /// <param name="character"></param>
    /// <returns></returns>
    private static IInvulnerabilityStrategy GetDamageStrategy(Character character)
    {
        if (character.CompareTag(Tags.PLAYER))
        {
            return new PlayerDamageInvulnerabilityStrategy();
        }
        if (character.CompareTag(Tags.ENEMY))
        {
            return new EnemyDamageInvulnerabilityStrategy();
        }
        return null;
    }

    /// <summary>
    /// 获取闪现策略
    /// </summary>
    /// <param name="character"></param>
    /// <returns></returns>
    private static IInvulnerabilityStrategy GetDashStrategy(Character character)
    {
        if(character.CompareTag(Tags.PLAYER)) { return new PlayerDashInvulnerabilityStrategy(); }
        if(character.CompareTag(Tags.ENEMY)) { return new EnemyDashInvulnerabilityStrategy();  }
        return null;
    }

    /// <summary>
    /// 获取策略
    /// </summary>
    /// <param name="type"></param>
    /// <param name="character"></param>
    /// <returns></returns>
    public static IInvulnerabilityStrategy GetStrategy(InvulnerabilityType type, Character character)
    {
        switch (type)
        {
            case InvulnerabilityType.Damage:
                return GetDamageStrategy(character);
            case InvulnerabilityType.Dash: 
                return GetDashStrategy(character);
            default: 
                return null;
        }
    }
}
